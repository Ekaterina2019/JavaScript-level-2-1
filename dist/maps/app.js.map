{"version":3,"sources":["Basket.js","BasketIcon.js","Item.js","Main.js","Product.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../app.js","sourcesContent":["class Basket{\r\n    constructor() {\r\n        this.products = {}\r\n        this.basketGetButtonBuy()\r\n    }\r\n\r\n    basketGetButtonBuy(){\r\n        return new Promise(resolve => {\r\n            setTimeout(()=>{\r\n                let buttonBuy = document.querySelectorAll('.buy-btn')\r\n                console.log(buttonBuy)\r\n                buttonBuy.forEach((btn)=> {\r\n                    btn.addEventListener('click', (event)=>{\r\n                        let id = event.srcElement.dataset.id\r\n                        let price = event.srcElement.dataset.price\r\n                        let title = event.srcElement.dataset.title\r\n                        this.addProduct({ id: id, price: price, title: title })\r\n                    })\r\n                })\r\n            },1000)\r\n        })\r\n    }\r\n\r\n    addProduct(product){\r\n        this.addProductToObject(product);\r\n        this.renderProductInBasket(product);\r\n        this.renderTotalSum();\r\n        //this.addRemoveBtnsListeners();\r\n    }\r\n\r\n    addProductToObject(product) {\r\n        if (this.products[product.id] == undefined) {\r\n            this.products[product.id] = {\r\n                price: product.price,\r\n                name: product.title,\r\n                count: 1\r\n            }\r\n        } else {\r\n            this.products[product.id].count++;\r\n        }\r\n    }\r\n\r\n    renderProductInBasket(product) {\r\n        let productExist = document.querySelector(`.productCount[data-id=\"${product.id}\"]`);\r\n        if (productExist) {\r\n            productExist.textContent++;\r\n            return;\r\n        }\r\n        let productRow =\r\n            `<tr>\r\n                    <td>${product.id}</td>\r\n                    <td>${product.title}</td>\r\n                    <td>${product.price}</td>\r\n                    <td style=\"text-align: center;\" class=\"productCount\" data-id=\"${product.id}\">1</td>\r\n                    </tr>`\r\n        let tbody = document.querySelector('tbody');\r\n        tbody.insertAdjacentHTML(\"beforeend\", productRow);\r\n    }\r\n\r\n    getTotalSum() {\r\n        let sum = 0;\r\n        for (let key in this.products) {\r\n            sum += this.products[key].price * this.products[key].count;\r\n        }\r\n        return sum;\r\n    }\r\n    renderTotalSum() {\r\n        document.querySelector('.total').textContent = this.getTotalSum()\r\n    }\r\n}","'use strict';\r\n\r\nclass BasketIcon {\r\n    constructor() {\r\n        this.basketIconEl = document.querySelector('.basketPanel')\r\n        this.btnBasket = document.querySelector('.btn-cart')\r\n        this.eventOpenCloseBasket()\r\n    }\r\n    eventOpenCloseBasket(){\r\n        this.btnBasket.addEventListener('click',()=>{\r\n            if(this.basketIconEl.style.display == 'none'){\r\n                this.basketIconEl.style.display = 'block'\r\n            }else if(this.basketIconEl.style.display == 'block') {\r\n                this.basketIconEl.style.display = 'none'\r\n            }\r\n        })\r\n    }\r\n}","class Item {\r\n    constructor(product) {\r\n        this.title = product.product_name;\r\n        this.id = product.id_product;\r\n        this.price = product.price;\r\n    }\r\n\r\n    renderProduct() {\r\n        return `<div class=\"product-item\">\r\n                <p>${this.id}</p>\r\n                <p>${this.title}</p>\r\n                <p>${this.price}</p>\r\n                <button data-price=\"${this.price}\" data-title=\"${this.title}\" data-id=\"${this.id}\" class=\"buy-btn\">Купить</button>\r\n            </div>`\r\n    }\r\n}","window.addEventListener('load',()=>{\r\n    const product = new Product()\r\n    const basketIcon = new BasketIcon()\r\n    const basketObject = new Basket()\r\n})\r\n","class Product {\r\n    constructor(container = '.products'){\r\n    this.container = container\r\n    this._getProduct()\r\n        .then(data => {\r\n            this.renderPage(data)\r\n        })\r\n    }\r\n\r\n    _getProduct(){\r\n        return fetch('./json/product.json')\r\n            .then(result => result.json())\r\n            .catch(error => console.log('error'))\r\n    }\r\n\r\n    renderPage (product){\r\n        for (let addProduct of product){\r\n            const productsList = new Item(addProduct)\r\n            const prodEl = document.querySelector(this.container);\r\n            prodEl.insertAdjacentHTML(\"beforeend\", productsList.renderProduct());\r\n        }\r\n    }\r\n}"]}